sigma_prev_R_2 <- sqrt((  pre_R_2 *(1 - pre_R_2 ))/ nrow(data2[which(data1$HIV_status == 1),]))
diff_incidence_estimates = incprops(PrevH = c(prev_1, prev_2), RSE_PrevH = c(sigma_prev_1 / prev_1, sigma_prev_2 / prev_2),
PrevR = c(pre_R_1, pre_R_2), RSE_PrevR = c(sigma_prev_R_1 / pre_R_1 , sigma_prev_R_2 / pre_R_2),
BS_Count = 10000, Boot = F, alpha = 0.05, MDRI = MDRI, RSE_MDRI = 0,
FRR = FRR, RSE_FRR = 0, BigT = big_T)$Incidence.Statistics
diff_incidence_output <- data.frame(prev_1 = prev_1,
prev_2 = prev_2,
prev_R_1 = pre_R_1,
prev_R_2 = pre_R_2,
incidence_1 = as.numeric(as.vector(diff_incidence_estimates$Incidence[1])),
incidence_2 = as.numeric(as.vector(diff_incidence_estimates$Incidence[2])),
inc_rse_1 = as.numeric(as.vector(diff_incidence_estimates$RSE[1])),
inc_rse_2 = as.numeric(as.vector(diff_incidence_estimates$RSE[2])))
diff_incidence_output
diff_incidence_data <- rbind(diff_incidence_data, diff_incidence_output )
}
diff_incidence_data$delta_inc <- diff_incidence_data$incidence_1 - diff_incidence_data$incidence_2
diff_incidence_data$delta_inc_se <- sqrt(((diff_incidence_data$inc_rse_1  * diff_incidence_data$incidence_1)^2/niterations) +
((diff_incidence_data$inc_rse_2 * diff_incidence_data$incidence_2)^2 /niterations))
diff_incidence_data$z_statistic <- diff_incidence_data$delta_inc / diff_incidence_data$delta_inc_se
diff_incidence_data$pvalue <- 2 * pnorm(-abs(diff_incidence_data$z_statistic))
glm_incidence_data$pvalue <- 2 * pnorm(-abs(glm_incidence_data$inci_prime_o / (sd(glm_incidence_data$inci_prime_o)/sqrt(niterations))))
return(list(diff_incidence_data, glm_incidence_data))
}
incidence_data <-  ntest_statistic_diff_inc(niterations = 1,
prevalence_func = linear_prevalence,
prevalences_recency_func = probability_recency_disrupt,
start_donationtimes = 2001,
end_donationtimes = 2011,
num_donations = 100000,
num_interpolations = 1,
time_threshold = 2006, MDRI = 182.5,
big_T = 730, FRR = 0.01)
probability_recency_disrupt(times = 2001:2011, timesdisrupt = 2009,
FRR = 0.01, MDRI = 182.5,
big_T = 730, incidence = linear_incidence,
prevalence = linear_prevalence)
probability_recency_disrupt(times = 2001:2011, timesdisrupt = 2009,
FRR = 0.01, MDRI = 182.5,
big_T = 730, incidence = linear_incidence(times = 2001:2011,  timesmax = 2011,
timesmin = 2001, timesdisrupt= 2009,
constant = 0, Imin = 0.01,
Idisrupt = 0.02, Ifin = 0.03, varying_con = 0),
prevalence = linear_prevalence)
probability_recency_disrupt(times = 2001:2011, timesdisrupt = 2009,
FRR = 0.01, MDRI = 182.5,
big_T = 730, incidence = linear_incidence(  timesmax = 2011,
timesmin = 2001, timesdisrupt= 2009,
constant = 0, Imin = 0.01,
Idisrupt = 0.02, Ifin = 0.03, varying_con = 0),
prevalence = linear_prevalence)
probability_recency_disrupt <-  function(times, timesdisrupt = 2009,
FRR = 0.01, MDRI = 182.5,
big_T = 730,
incidence = varing_incidence,
prevalence = linear_prevalence
){
#depends on incidence
MDRI = MDRI / 365; big_T = big_T / 365
probabilityrecency <- FRR + (incidence *
((1 - prevalence(times = times))/
prevalence(times = times)) * (MDRI - (FRR * big_T)))
return(probabilityrecency)
}
probability_recency_disrupt(times = 2001:2011, timesdisrupt = 2009,
FRR = 0.01, MDRI = 182.5,
big_T = 730, incidence = linear_incidence(times = 2001:2011,  timesmax = 2011,
timesmin = 2001, timesdisrupt= 2009,
constant = 0, Imin = 0.01,
Idisrupt = 0.02, Ifin = 0.03, varying_con = 0),
prevalence = linear_prevalence)
probability_recency_disrupt <-  function(times, timesdisrupt = 2009,
FRR = 0.01, MDRI = 182.5,
big_T = 730,
incidence = varing_incidence,
prevalence = linear_prevalence,
incparams = c(times1,  timesmax, timesmin, timesdisrupt,
constant, Imin, Idisrupt, Ifin, varying_con)
){
#depends on incidence
MDRI = MDRI / 365; big_T = big_T / 365
probabilityrecency <- FRR + (incidence(times = incparams[1], timesmax = incparams[2],
timesmin = incparams[3], timesdisrupt = incparams[4],
constant = incparams[5], Imin = incparams[6],
Idisrupt = incparams[7], Ifin = incparams[8], varying_con = incparams[9]) *
((1 - prevalence(times = times))/
prevalence(times = times)) * (MDRI - (FRR * big_T)))
return(probabilityrecency)
}
probability_recency_disrupt(times = 2001:2011, timesdisrupt = 2009,
FRR = 0.01, MDRI = 182.5,
big_T = 730, incidence ,
prevalence = linear_prevalence,
incparams =  c(times = 2001:201,  timesmax = 2011, timesmin = 2001, timesdisrupt = 2009,
constant = 0, Imin = 0.01, Idisrupt = 0.03, Ifin  = 0.03, varying_con = 0))
probability_recency_disrupt <-  function(times, timesdisrupt = 2009,
FRR = 0.01, MDRI = 182.5,
big_T = 730,
incidence = varing_incidence,
prevalence = linear_prevalence,
incparams = c(times,  timesmax, timesmin, timesdisrupt,
constant, Imin, Idisrupt, Ifin, varying_con)
){
#depends on incidence
MDRI = MDRI / 365; big_T = big_T / 365
probabilityrecency <- FRR + (incidence(times = incparams[1], timesmax = incparams[2],
timesmin = incparams[3], timesdisrupt = incparams[4],
constant = incparams[5], Imin = incparams[6],
Idisrupt = incparams[7], Ifin = incparams[8], varying_con = incparams[9]) *
((1 - prevalence(times = times))/
prevalence(times = times)) * (MDRI - (FRR * big_T)))
return(probabilityrecency)
}
probability_recency_disrupt(times = 2001:2011, timesdisrupt = 2009,
FRR = 0.01, MDRI = 182.5,
big_T = 730, incidence ,
prevalence = linear_prevalence,
incparams =  c(times = 2001:201,  timesmax = 2011, timesmin = 2001, timesdisrupt = 2009,
constant = 0, Imin = 0.01, Idisrupt = 0.03, Ifin  = 0.03, varying_con = 0))
probability_recency_disrupt(times = 2001:2011, timesdisrupt = 2009,
FRR = 0.01, MDRI = 182.5,
big_T = 730, incidence  = linear_incidence,
prevalence = linear_prevalence,
incparams =  c(times = 2001:201,  timesmax = 2011, timesmin = 2001, timesdisrupt = 2009,
constant = 0, Imin = 0.01, Idisrupt = 0.03, Ifin  = 0.03, varying_con = 0))
probability_recency_disrupt(times = 2001:2011, timesdisrupt = 2009,
FRR = 0.01, MDRI = 182.5,
big_T = 730, incidence  = linear_incidence,
prevalence = linear_prevalence,
incparams =  c(times = 2001:201,  timesmax = 2011, timesmin = 2001, timesdisrupt = 2009,
constant = 0, Imin = 0.01, Idisrupt = 0.003, Ifin  = 0.03, varying_con = 0))
linear_incidence <- function(times = 2001:2011,  timesmax = 2011,
timesmin = 2001, timesdisrupt= 2009,
constant = 0, Imin = 0.01,
Idisrupt = 0.02, Ifin = 0.03, varying_con = 0)
{
if (constant > 0) {
incidence <- rep(constant,length(times))
} else {
incidence <-  ifelse(times < timesdisrupt, Imin + (((Idisrupt + varying_con) - Imin)/(timesdisrupt -timesmin)) * (times - timesmin),
ifelse(times <= timesmax, (Idisrupt + varying_con) + ((Ifin - (Idisrupt  + varying_con))/(timesmax - timesdisrupt)) * (times - timesdisrupt), 0))
}
return(incidence)
}
probability_recency_disrupt <-  function(times, timesdisrupt = 2009,
FRR = 0.01, MDRI = 182.5,
big_T = 730,
incidence = varing_incidence,
prevalence = linear_prevalence,
incparams = c(times,  timesmax, timesmin, timesdisrupt,
constant, Imin, Idisrupt, Ifin, varying_con)
){
#depends on incidence
MDRI = MDRI / 365; big_T = big_T / 365
probabilityrecency <- FRR + (incidence(times = incparams[1], timesmax = incparams[2],
timesmin = incparams[3], timesdisrupt = incparams[4],
constant = incparams[5], Imin = incparams[6],
Idisrupt = incparams[7], Ifin = incparams[8], varying_con = incparams[9]) *
((1 - prevalence(times = times))/
prevalence(times = times)) * (MDRI - (FRR * big_T)))
return(probabilityrecency)
}
probability_recency_disrupt(times = 2001:2011, timesdisrupt = 2009,
FRR = 0.01, MDRI = 182.5,
big_T = 730, incidence  = linear_incidence,
prevalence = linear_prevalence,
incparams =  c(times = 2001:201,  timesmax = 2011, timesmin = 2001, timesdisrupt = 2009,
constant = 0, Imin = 0.01, Idisrupt = 0.003, Ifin  = 0.03, varying_con = 0))
probability_recency_disrupt(times = 2001:2011, timesdisrupt = 2009,
FRR = 0.01, MDRI = 182.5,
big_T = 730, incidence  = linear_incidence,
prevalence = linear_prevalence,
incparams =  c(times = 2001:2011,  timesmax = 2011, timesmin = 2001, timesdisrupt = 2009,
constant = 0, Imin = 0.01, Idisrupt = 0.03, Ifin  = 0.03, varying_con = 0))
probability_recency_disrupt(times = 2001:2011, timesdisrupt = 2009,
FRR = 0.01, MDRI = 182.5,
big_T = 730, incidence  = linear_incidence,
prevalence = linear_prevalence,
incparams =  c(times = 2001:2011,  timesmax = 2011, timesmin = 2001, timesdisrupt = 2009,
constant = 0, Imin = 0.01, Idisrupt = 0.03, Ifin  = 0.03, varying_con = 0))
probability_recency_disrupt(times = 2001:2011, timesdisrupt = 2009,
FRR = 0.01, MDRI = 182.5,
big_T = 730, incidence  = linear_incidence,
prevalence = linear_prevalence,
incparams =  c(times = 2001:2011,  timesmax = 2011, timesmin = 2001, timesdisrupt = 2009,
constant = 0, Imin = 0.01, Idisrupt = 0.02, Ifin  = 0.03, varying_con = 0))
incparams =  c(times = 2001:2011,  timesmax = 2011, timesmin = 2001, timesdisrupt = 2009,
constant = 0, Imin = 0.01, Idisrupt = 0.02, Ifin  = 0.03, varying_con = 0)
incidence  = linear_incidence
incidence(times = incparams[1], timesmax = incparams[2],
timesmin = incparams[3], timesdisrupt = incparams[4],
constant = incparams[5], Imin = incparams[6],
Idisrupt = incparams[7], Ifin = incparams[8], varying_con = incparams[9])
probability_recency_disrupt(times = 2001:2011, timesdisrupt = 2009,
FRR = 0.01, MDRI = 182.5,
big_T = 730, incidence = linear_incidence,
prevalence = linear_prevalence)
rm(list = ls())
source("/home/laurette/Desktop/Github/SANBS/SANBS.R", echo = FALSE)
?sapply
varying_con = c(0.001,0.002, 0.003, 0.005, 0.006)
sapply(varying_con,
function(x) linear_incidence(times = 2001:2011,  timesmax = 2011,
timesmin = 2001, timesdisrupt= 2009,
constant = 0, Imin = 0.01,
Idisrupt = 0.02, Ifin = 0.03, varying_con = x))
linear_incidence <- function(times = 2001:2011,  timesmax = 2011,
timesmin = 2001, timesdisrupt= 2009,
constant = 0, Imin = 0.01,
Idisrupt = 0.02, Ifin = 0.03, varying_con = 0)
{
if (constant > 0) {
incidence <- rep(constant,length(times))
} else {
incidence <-  ifelse(times < timesdisrupt, Imin + (((Idisrupt + varying_con) - Imin)/(timesdisrupt -timesmin)) * (times - timesmin),
ifelse(times <= timesmax, (Idisrupt + varying_con) + ((Ifin - (Idisrupt  + varying_con))/(timesmax - timesdisrupt)) * (times - timesdisrupt), 0))
}
return(incidence)
}
varying_con = c(0.001,0.002, 0.003, 0.005, 0.006)
sapply(varying_con,
function(x) linear_incidence(times = 2001:2011,  timesmax = 2011,
timesmin = 2001, timesdisrupt= 2009,
constant = 0, Imin = 0.01,
Idisrupt = 0.02, Ifin = 0.03, varying_con = x))
varying_con = c(0.001,0.002, 0.003, 0.005, 0.006)
Incidence <- sapply(varying_con, function(x) linear_incidence(times = 2001:2011,  timesmax = 2011,
timesmin = 2001, timesdisrupt= 2009,
constant = 0, Imin = 0.01,
Idisrupt = 0.02, Ifin = 0.03, varying_con = x))
Incidence
incidence_data <-   test_statistic_diff_inc(niterations = 1,
prevalence_func = linear_prevalence,
prevalences_recency_func = probability_recency_disrupt,
start_donationtimes = 2001,
end_donationtimes = 2011,
num_donations = 100000,
num_interpolations = 1,
time_threshold = 2006, MDRI = 182.5,
big_T = 730, FRR = 0.01)
incidence_data
linear_incidence <- function(times = 2001:2011,  timesmax = 2011,
timesmin = 2001, timesdisrupt= 2009,
constant = 0.01, Imin = 0.01,
Idisrupt = 0.02, Ifin = 0.03, varying_con = 0)
{
if (constant > 0) {
incidence <- rep(constant,length(times))
} else {
incidence <-  ifelse(times < timesdisrupt, Imin + (((Idisrupt + varying_con) - Imin)/(timesdisrupt -timesmin)) * (times - timesmin),
ifelse(times <= timesmax, (Idisrupt + varying_con) + ((Ifin - (Idisrupt  + varying_con))/(timesmax - timesdisrupt)) * (times - timesdisrupt), 0))
}
return(incidence)
}
incidence_data <-   test_statistic_diff_inc(niterations = 1,
prevalence_func = linear_prevalence,
prevalences_recency_func = probability_recency_disrupt,
start_donationtimes = 2001,
end_donationtimes = 2011,
num_donations = 100000,
num_interpolations = 1,
time_threshold = 2006, MDRI = 182.5,
big_T = 730, FRR = 0.01)
incidence_data
incidence_data <-   test_statistic_diff_inc(niterations = 1,
prevalence_func = linear_prevalence,
prevalences_recency_func = probability_recency_disrupt,
start_donationtimes = 2001,
end_donationtimes = 2011,
num_donations = 100000,
num_interpolations = 10,
time_threshold = 2006, MDRI = 182.5,
big_T = 730, FRR = 0.01)
incidence_data
rm(list = ls())
source("/home/laurette/Desktop/Github/SANBS/SANBS.R", echo = FALSE)
linear_incidence <- function(times = 2001:2011,  timesmax = 2011,
timesmin = 2001, timesdisrupt= 2009,
constant = 0.01, Imin = 0.01,
Idisrupt = 0.02, Ifin = 0.03, varying_con = 0)
{
if (constant > 0) {
incidence <- rep(constant,length(times))
} else {
incidence <-  ifelse(times < timesdisrupt, Imin + (((Idisrupt + varying_con) - Imin)/(timesdisrupt -timesmin)) * (times - timesmin),
ifelse(times <= timesmax, (Idisrupt + varying_con) + ((Ifin - (Idisrupt  + varying_con))/(timesmax - timesdisrupt)) * (times - timesdisrupt), 0))
}
return(incidence)
}
incidence_data <-   test_statistic_diff_inc(niterations = 1,
prevalence_func = linear_prevalence,
prevalences_recency_func = probability_recency_disrupt,
start_donationtimes = 2001,
end_donationtimes = 2011,
num_donations = 100000,
num_interpolations = 10,
time_threshold = 2006, MDRI = 182.5,
big_T = 730, FRR = 0.01)
linear_incidence <- function(times = 2001:2011,  timesmax = 2011,
timesmin = 2001, timesdisrupt= 2009,
constant = 0.01, Imin = 0.01,
Idisrupt = 0.02, Ifin = 0.03, varying_con = 0)
{
if (constant > 0) {
incidence <- rep(constant,length(times))
} else {
incidence <-  ifelse(times < timesdisrupt, Imin + (((Idisrupt + varying_con) - Imin)/(timesdisrupt -timesmin)) * (times - timesmin),
ifelse(times <= timesmax, (Idisrupt + varying_con) + ((Ifin - (Idisrupt  + varying_con))/(timesmax - timesdisrupt)) * (times - timesdisrupt), 0))
}
return(incidence)
}
incidence_data <-   test_statistic_diff_inc(niterations = 1,
prevalence_func = linear_prevalence,
prevalences_recency_func = probability_recency_disrupt,
start_donationtimes = 2001,
end_donationtimes = 2011,
num_donations = 100000,
num_interpolations = 10,
time_threshold = 2006, MDRI = 182.5,
big_T = 730, FRR = 0.01)
probability_recency_disrupt(times = 2001:2011, timesdisrupt = 2009,
FRR = 0.01, MDRI = 182.5,
big_T = 730,
incidence = varing_incidence,
prevalence = linear_prevalence)
linear_incidence <- function(times = 2001:2011,  timesmax = 2011,
timesmin = 2001, timesdisrupt= 2009,
constant = 0.01, Imin = 0.01,
Idisrupt = 0.02, Ifin = 0.03, varying_con = 0)
{
if (constant > 0) {
incidence <- rep(constant,length(times))
} else {
incidence <-  ifelse(times < timesdisrupt, Imin + (((Idisrupt + varying_con) - Imin)/(timesdisrupt -timesmin)) * (times - timesmin),
ifelse(times <= timesmax, (Idisrupt + varying_con) + ((Ifin - (Idisrupt  + varying_con))/(timesmax - timesdisrupt)) * (times - timesdisrupt), 0))
}
return(incidence)
}
incidence_data <-   test_statistic_diff_inc(niterations = 1,
prevalence_func = linear_prevalence,
prevalences_recency_func = probability_recency_disrupt,
start_donationtimes = 2001,
end_donationtimes = 2011,
num_donations = 100000,
num_interpolations = 10,
time_threshold = 2006, MDRI = 182.5,
big_T = 730, FRR = 0.01)
rm(list = ls())
source("/home/laurette/Desktop/Github/SANBS/SANBS.R", echo = FALSE)
probability_recency_disrupt <-  function(times, timesdisrupt = 2009,
FRR = 0.01, MDRI = 182.5,
big_T = 730,
incidence = Linear_incidence,
prevalence = linear_prevalence
){
#depends on incidence
MDRI = MDRI / 365; big_T = big_T / 365
probabilityrecency <- FRR + (incidence(times = times) *
((1 - prevalence(times = times))/
prevalence(times = times)) * (MDRI - (FRR * big_T)))
return(probabilityrecency)
}
linear_incidence <- function(times = 2001:2011,  timesmax = 2011,
timesmin = 2001, timesdisrupt= 2009,
constant = 0.01, Imin = 0.01,
Idisrupt = 0.02, Ifin = 0.03, varying_con = 0)
{
if (constant > 0) {
incidence <- rep(constant,length(times))
} else {
incidence <-  ifelse(times < timesdisrupt, Imin + (((Idisrupt + varying_con) - Imin)/(timesdisrupt -timesmin)) * (times - timesmin),
ifelse(times <= timesmax, (Idisrupt + varying_con) + ((Ifin - (Idisrupt  + varying_con))/(timesmax - timesdisrupt)) * (times - timesdisrupt), 0))
}
return(incidence)
}
incidence_data <-   test_statistic_diff_inc(niterations = 1,
prevalence_func = linear_prevalence,
prevalences_recency_func = probability_recency_disrupt,
start_donationtimes = 2001,
end_donationtimes = 2011,
num_donations = 100000,
num_interpolations = 10,
time_threshold = 2006, MDRI = 182.5,
big_T = 730, FRR = 0.01)
probability_recency_disrupt <-  function(times, timesdisrupt = 2009,
FRR = 0.01, MDRI = 182.5,
big_T = 730,
incidence = linear_incidence,
prevalence = linear_prevalence
){
#depends on incidence
MDRI = MDRI / 365; big_T = big_T / 365
probabilityrecency <- FRR + (incidence(times = times) *
((1 - prevalence(times = times))/
prevalence(times = times)) * (MDRI - (FRR * big_T)))
return(probabilityrecency)
}
incidence_data <-   test_statistic_diff_inc(niterations = 1,
prevalence_func = linear_prevalence,
prevalences_recency_func = probability_recency_disrupt,
start_donationtimes = 2001,
end_donationtimes = 2011,
num_donations = 100000,
num_interpolations = 10,
time_threshold = 2006, MDRI = 182.5,
big_T = 730, FRR = 0.01)
incidence_data
rm(list = ls())
incidence_data1 <- test_statistic_diff_inc(niterations = 10000,
prevalence_func = linear_prevalence,
prevalences_recency_func = linear_prevalence_recency,
start_donationtimes = 2001,
end_donationtimes = 2011,
num_donations = 100000,
num_interpolations = 2,
time_threshold = 2006, MDRI = 182.5,
big_T = 730, FRR = 0.01)
source("/home/laurette/Desktop/Github/SANBS/SANBS.R", echo = FALSE)
incidence_data1 <- test_statistic_diff_inc(niterations = 100,
prevalence_func = linear_prevalence,
prevalences_recency_func = linear_prevalence_recency,
start_donationtimes = 2001,
end_donationtimes = 2011,
num_donations = 100000,
num_interpolations = 2,
time_threshold = 2006, MDRI = 182.5,
big_T = 730, FRR = 0.01)
write.table(incidence_data1[[1]], file = "without_diruption_pvalues")
incidence_data1_pvalues <- read.table("/home/laurette/Desktop/Github/SANBAS/without_diruption_pvalues")
incidence_data1_pvalues <- read.table("/home/laurette/Desktop/Github/SANBS/without_diruption_pvalues")
incidence_data1_glm <- read.table("/home/laurette/Desktop/Github/SANBS/without_diruption_glm")
ggplot(incidence_data1_glm, aes(pvalue)) +
geom_histogram(bins = 10)+
labs(x = "derivative of the incidence", y = " frequency")+
theme_bw(base_size = 18, base_family = "")
ggplot(incidence_data1_pvalues, aes(pvalue)) +
geom_histogram(bins = 10)+
labs(x = "derivative of the incidence", y = " frequency")+
theme_bw(base_size = 18, base_family = "")
ggplot(incidence_data1_glm, aes(pvalue)) +
geom_histogram(bins = 10)+
labs(x = "derivative of the incidence", y = " frequency")+
theme_bw(base_size = 18, base_family = "")
ggplot(incidence_data1_glm, aes(pvalues)) +
geom_histogram(bins = 10)+
labs(x = "derivative of the incidence", y = " frequency")+
theme_bw(base_size = 18, base_family = "")
rm(list = ls())
source("/home/laurette/Desktop/Github/SANBS/SANBS.R", echo = FALSE)
incidence_data1 <- test_statistic_diff_inc(niterations = 100,
prevalence_func = linear_prevalence,
prevalences_recency_func = linear_prevalence_recency,
start_donationtimes = 2001,
end_donationtimes = 2011,
num_donations = 100000,
num_interpolations = 2,
time_threshold = 2006, MDRI = 182.5,
big_T = 730, FRR = 0.01)
write.table(incidence_data1[[1]], file = "without_diruption_pvalues")
incidence_data1_pvalues <- read.table("/home/laurette/Desktop/Github/SANBS/without_diruption_pvalues")
write.table(incidence_data1[[2]], file = "without_diruption_glm")
incidence_data1_glm <- read.table("/home/laurette/Desktop/Github/SANBS/without_diruption_glm")
ggplot(incidence_data1_glm, aes(pvalue)) +
geom_histogram(bins = 10)+
labs(x = "derivative of the incidence", y = " frequency")+
theme_bw(base_size = 18, base_family = "")
ggplot(incidence_data1_pvalues, aes(pvalue)) +
geom_histogram(bins = 10)+
labs(x = "difference in incidence", y = " frequency")+
theme_bw(base_size = 18, base_family = "")
incidence_data <-   test_statistic_diff_inc(niterations = 1,
prevalence_func = linear_prevalence,
prevalences_recency_func = probability_recency_disrupt,
start_donationtimes = 2001,
end_donationtimes = 2011,
num_donations = 100000,
num_interpolations = 10,
time_threshold = 2006, MDRI = 182.5,
big_T = 730, FRR = 0.01)
linear_incidence <- function(times = 2001:2011,  timesmax = 2011,
timesmin = 2001, timesdisrupt= 2009,
constant = 0.01, Imin = 0.01,
Idisrupt = 0.02, Ifin = 0.03, varying_con = 0)
{
if (constant > 0) {
incidence <- rep(constant,length(times))
} else {
incidence <-  ifelse(times < timesdisrupt, Imin + (((Idisrupt + varying_con) - Imin)/(timesdisrupt -timesmin)) * (times - timesmin),
ifelse(times <= timesmax, (Idisrupt + varying_con) + ((Ifin - (Idisrupt  + varying_con))/(timesmax - timesdisrupt)) * (times - timesdisrupt), 0))
}
return(incidence)
}
incidence_data <-   test_statistic_diff_inc(niterations = 1,
prevalence_func = linear_prevalence,
prevalences_recency_func = probability_recency_disrupt,
start_donationtimes = 2001,
end_donationtimes = 2011,
num_donations = 100000,
num_interpolations = 10,
time_threshold = 2006, MDRI = 182.5,
big_T = 730, FRR = 0.01)
incidence_data
incidence_data <-   test_statistic_diff_inc(niterations = 5,
prevalence_func = linear_prevalence,
prevalences_recency_func = probability_recency_disrupt,
start_donationtimes = 2001,
end_donationtimes = 2011,
num_donations = 100000,
num_interpolations = 10,
time_threshold = 2006, MDRI = 182.5,
big_T = 730, FRR = 0.01)
incidence_data
